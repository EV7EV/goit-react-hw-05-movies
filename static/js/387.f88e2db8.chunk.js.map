{"version":3,"file":"static/js/387.f88e2db8.chunk.js","mappings":"2QAEMA,EAAWC,EAAAA,GAAAA,GAAH,4EAMRC,EAAOD,EAAAA,GAAAA,EAAH,iE,SCkCV,EApCa,WACX,OAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,+FACXC,EAAAA,EAAAA,IAAiBJ,EAAS,WAC7BK,MAAK,SAAAC,GAAI,OAAIP,EAASO,EAAKC,KAAlB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,IAHG,2CAAH,qDAKhBT,GACD,GAAE,CAACH,KAGF,SAACN,EAAD,UACGI,GACCA,EAAMe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,2BACE,gBACEC,MAAM,QACNC,OAAO,QACPC,IACEH,EAAY,yCAC0BA,GAClC,qKAENI,IAAKN,KAEP,SAACnB,EAAD,UAAOoB,KACP,SAACpB,EAAD,UAAOmB,MAZAD,EADD,KAkBjB,C,sKCtCDQ,EAAAA,EAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAM,mCAENC,EAAU,mCAAG,4FACL,+BADK,SAEMF,EAAAA,EAAAA,IAAA,UADX,gCACW,OAAmBC,IAFzB,uBAETjB,EAFS,EAETA,KAFS,kBAGVA,GAHU,2CAAH,qDAMVmB,EAAW,mCAAG,WAAMC,GAAN,+EACN,+CADM,SAEKJ,EAAAA,EAAAA,IAAA,UADX,gDACW,OAAmBC,EAAnB,kBAAgCG,IAFrC,uBAEVpB,EAFU,EAEVA,KAFU,kBAIXA,GAJW,2CAAH,sDAOXqB,EAAU,mCAAG,WAAMb,GAAN,kFACXc,EADW,mBACOd,EADP,sBAEMQ,EAAAA,EAAAA,IAAA,UAAaM,GAAb,OAAmBL,IAFzB,uBAETjB,EAFS,EAETA,KAFS,kBAIVA,GAJU,2CAAH,sDAOVF,EAAgB,mCAAG,WAAOU,EAAIe,GAAX,kFACjBD,EADiB,mBACCd,EADD,YACOe,EADP,sBAGAP,EAAAA,EAAAA,IAAA,UAAaM,GAAb,OAAmBL,IAHnB,uBAGfjB,EAHe,EAGfA,KAHe,kBAKhBA,GALgB,2CAAH,uD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/MovieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst CastList = styled.ul`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\n\nconst Name = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nexport { CastList, Name };\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { searchAboutMovie } from 'services/MovieApi';\nimport { CastList, Name } from './Cast.styled';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getActores = async () => {\n      await searchAboutMovie(movieId, 'credits')\n        .then(data => setCasts(data.cast))\n        .catch(error => console.log(error.message));\n    };\n    getActores();\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {casts &&\n        casts.map(({ id, name, character, profile_path }) => (\n          <li key={id}>\n            <img\n              width=\"300px\"\n              height=\"450px\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                  : 'https://pixabay.com/get/g95a2dc3dd10be26c9598275be3cf4782592288a68b0db506b9a6d0f7acb03dd8315942505e34951e67529f8cc280ba76fba5448b53138ef7211f108c2128a4e3_1280.jpg'\n              }\n              alt={name}\n            />\n            <Name>{character}</Name>\n            <Name>{name}</Name>\n          </li>\n        ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst KEY = 'cca79e12b25cdd9f67fc795a1689f5d9';\n\nconst fetchMovie = async () => {\n  const url = '/3/trending/all/day?api_key=';\n  const { data } = await axios.get(`${url}${KEY}`);\n  return data;\n};\n\nconst searchMovie = async value => {\n  const url = '/3/search/movie?include_adult=false&api_key=';\n  const { data } = await axios.get(`${url}${KEY}&query=${value}`);\n\n  return data;\n};\n\nconst searchById = async id => {\n  const url = `/3/movie/${id}?api_key=`;\n  const { data } = await axios.get(`${url}${KEY}`);\n\n  return data;\n};\n\nconst searchAboutMovie = async (id, about) => {\n  const url = `/3/movie/${id}/${about}?api_key=`;\n\n  const { data } = await axios.get(`${url}${KEY}`);\n\n  return data;\n};\n\nexport { fetchMovie, searchMovie, searchById, searchAboutMovie };\n"],"names":["CastList","styled","Name","useState","casts","setCasts","movieId","useParams","useEffect","getActores","searchAboutMovie","then","data","cast","catch","error","console","log","message","map","id","name","character","profile_path","width","height","src","alt","axios","KEY","fetchMovie","searchMovie","value","searchById","url","about"],"sourceRoot":""}