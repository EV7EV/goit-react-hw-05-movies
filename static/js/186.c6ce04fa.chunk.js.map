{"version":3,"file":"static/js/186.c6ce04fa.chunk.js","mappings":"8PAKaA,EAAU,WACrB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,+FACXC,EAAAA,EAAAA,IAAiBJ,EAAS,WAC7BK,MAAK,SAAAC,GAAI,OAAIP,EAAWO,EAAKC,QAApB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,IAHG,2CAAH,qDAKhBT,GACD,GAAE,CAACH,IACmB,IAAnBF,EAAQe,QACH,uBAAG,6CAGV,yBACGf,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACX,2BACE,yBAAG,UAAQA,MACX,uBAAID,MAFGD,EADE,KAQlB,EAED,W,sKC9BAG,EAAAA,EAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAM,mCAENC,EAAU,mCAAG,4FACL,+BADK,SAEMF,EAAAA,EAAAA,IAAA,UADX,gCACW,OAAmBC,IAFzB,uBAETb,EAFS,EAETA,KAFS,kBAGVA,GAHU,2CAAH,qDAMVe,EAAW,mCAAG,WAAMC,GAAN,+EACN,+CADM,SAEKJ,EAAAA,EAAAA,IAAA,UADX,gDACW,OAAmBC,EAAnB,kBAAgCG,IAFrC,uBAEVhB,EAFU,EAEVA,KAFU,kBAIXA,GAJW,2CAAH,sDAOXiB,EAAU,mCAAG,WAAMR,GAAN,kFACXS,EADW,mBACOT,EADP,sBAEMG,EAAAA,EAAAA,IAAA,UAAaM,GAAb,OAAmBL,IAFzB,uBAETb,EAFS,EAETA,KAFS,kBAIVA,GAJU,2CAAH,sDAOVF,EAAgB,mCAAG,WAAOW,EAAIU,GAAX,kFACjBD,EADiB,mBACCT,EADD,YACOU,EADP,sBAGAP,EAAAA,EAAAA,IAAA,UAAaM,GAAb,OAAmBL,IAHnB,uBAGfb,EAHe,EAGfA,KAHe,kBAKhBA,GALgB,2CAAH,uD","sources":["components/Reviews/Reviews.jsx","services/MovieApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { searchAboutMovie } from 'services/MovieApi';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getRewiews = async () => {\n      await searchAboutMovie(movieId, 'reviews')\n        .then(data => setReviews(data.results))\n        .catch(error => console.log(error.message));\n    };\n    getRewiews();\n  }, [movieId]);\n  if (reviews.length === 0) {\n    return <p>We dont have any reviews for this movie</p>;\n  }\n  return (\n    <div>\n      {reviews.map(({ id, content, author }) => (\n        <li key={id}>\n          <p>Author:{author}</p>\n          <p>{content}</p>\n        </li>\n      ))}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst KEY = 'cca79e12b25cdd9f67fc795a1689f5d9';\n\nconst fetchMovie = async () => {\n  const url = '/3/trending/all/day?api_key=';\n  const { data } = await axios.get(`${url}${KEY}`);\n  return data;\n};\n\nconst searchMovie = async value => {\n  const url = '/3/search/movie?include_adult=false&api_key=';\n  const { data } = await axios.get(`${url}${KEY}&query=${value}`);\n\n  return data;\n};\n\nconst searchById = async id => {\n  const url = `/3/movie/${id}?api_key=`;\n  const { data } = await axios.get(`${url}${KEY}`);\n\n  return data;\n};\n\nconst searchAboutMovie = async (id, about) => {\n  const url = `/3/movie/${id}/${about}?api_key=`;\n\n  const { data } = await axios.get(`${url}${KEY}`);\n\n  return data;\n};\n\nexport { fetchMovie, searchMovie, searchById, searchAboutMovie };\n"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","getRewiews","searchAboutMovie","then","data","results","catch","error","console","log","message","length","map","id","content","author","axios","KEY","fetchMovie","searchMovie","value","searchById","url","about"],"sourceRoot":""}