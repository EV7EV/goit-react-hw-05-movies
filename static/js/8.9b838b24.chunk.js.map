{"version":3,"file":"static/js/8.9b838b24.chunk.js","mappings":"kMAGMA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,OAAS,GACfH,EAAOI,KAAI,SAAAC,GAET,OACE,yBACE,UAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMN,GAAYO,GAAE,kBAAaH,EAAMI,IAAtD,UACG,KACD,uBAAIJ,EAAMK,MAAQL,EAAMK,MAAQL,EAAMM,WAHjCN,EAAMI,GAOlB,KAGR,C,mICnBKG,EAAO,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACd,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAaA,OACE,kBAAMC,SAPW,SAAAC,GACjBA,EAAGC,iBACHN,EAAaE,GACbC,EAAU,GACX,EAGC,WACE,kBAAOI,SAbU,SAAAC,GACnBL,EAAUK,EAAMC,OAAOC,MACxB,EAWkCA,MAAOR,EAAQS,KAAK,UACnD,mBAAQA,KAAK,SAAb,SAAsB,aAG3B,E,iBCmBD,EAlCkB,WAChB,OAA4BV,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAeyB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQH,EAAaI,IAAI,SAC/B,GAAKD,EAAL,CAIA,IAAME,EAAU,mCAAG,8GAEIC,EAAAA,EAAAA,IAAYH,GAFhB,OAETI,EAFS,OAGfT,EAAUS,EAAKC,SAHA,gDAKfC,QAAQC,IAAI,KAAMC,SALH,yDAAH,qDAQhBN,GAVC,CAWF,GAAE,CAACL,IAOJ,OACE,4BACE,SAACf,EAAD,CAAMC,aANW,SAAAU,GACnBK,EAAgB,CAAEE,MAAOP,GAC1B,KAKG,SAACxB,EAAA,EAAD,CAAYC,OAAQA,MAGzB,C,sKCrCDuC,EAAAA,EAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAM,mCAENC,EAAU,mCAAG,4FACL,+BADK,SAEMF,EAAAA,EAAAA,IAAA,UADX,gCACW,OAAmBC,IAFzB,uBAETN,EAFS,EAETA,KAFS,kBAGVA,GAHU,2CAAH,qDAMVD,EAAW,mCAAG,WAAMV,GAAN,+EACN,+CADM,SAEKgB,EAAAA,EAAAA,IAAA,UADX,gDACW,OAAmBC,EAAnB,kBAAgCjB,IAFrC,uBAEVW,EAFU,EAEVA,KAFU,kBAIXA,GAJW,2CAAH,sDAOXQ,EAAU,mCAAG,WAAMjC,GAAN,kFACXkC,EADW,mBACOlC,EADP,sBAEM8B,EAAAA,EAAAA,IAAA,UAAaI,GAAb,OAAmBH,IAFzB,uBAETN,EAFS,EAETA,KAFS,kBAIVA,GAJU,2CAAH,sDAOVU,EAAgB,mCAAG,WAAOnC,EAAIoC,GAAX,kFACjBF,EADiB,mBACClC,EADD,YACOoC,EADP,sBAGAN,EAAAA,EAAAA,IAAA,UAAaI,GAAb,OAAmBH,IAHnB,uBAGfN,EAHe,EAGfA,KAHe,kBAKhBA,GALgB,2CAAH,uD","sources":["components/MoviesList/MoviesList.jsx","components/Form/Form.jsx","pages/MoviePage.jsx","services/MovieApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.length > 0 &&\n        movies.map(movie => {\n          //   console.log(movie);\n          return (\n            <li key={movie.id}>\n              <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n                {' '}\n                <p>{movie.title ? movie.title : movie.name}</p>\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport { MoviesList };\n","import { useState } from 'react';\n\nconst Form = ({ handleSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  // метод який буде відправляти форму\n  const formSubmit = ev => {\n    ev.preventDefault();\n    handleSubmit(search);\n    setSearch('');\n  };\n\n  return (\n    <form onSubmit={formSubmit}>\n      <input onChange={handleSearch} value={search} type=\"text\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport { Form };\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Form } from 'components/Form/Form';\nimport { searchMovie } from 'services/MovieApi';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst MoviePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) {\n      return;\n    }\n\n    const searchFilm = async () => {\n      try {\n        const data = await searchMovie(query);\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    searchFilm();\n  }, [searchParams]);\n\n  // метод який забирає значення з форми\n  const handleSubmit = value => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <div>\n      <Form handleSubmit={handleSubmit} />\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default MoviePage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst KEY = 'cca79e12b25cdd9f67fc795a1689f5d9';\n\nconst fetchMovie = async () => {\n  const url = '/3/trending/all/day?api_key=';\n  const { data } = await axios.get(`${url}${KEY}`);\n  return data;\n};\n\nconst searchMovie = async value => {\n  const url = '/3/search/movie?include_adult=false&api_key=';\n  const { data } = await axios.get(`${url}${KEY}&query=${value}`);\n\n  return data;\n};\n\nconst searchById = async id => {\n  const url = `/3/movie/${id}?api_key=`;\n  const { data } = await axios.get(`${url}${KEY}`);\n\n  return data;\n};\n\nconst searchAboutMovie = async (id, about) => {\n  const url = `/3/movie/${id}/${about}?api_key=`;\n\n  const { data } = await axios.get(`${url}${KEY}`);\n\n  return data;\n};\n\nexport { fetchMovie, searchMovie, searchById, searchAboutMovie };\n"],"names":["MoviesList","movies","location","useLocation","length","map","movie","state","from","to","id","title","name","Form","handleSubmit","useState","search","setSearch","onSubmit","ev","preventDefault","onChange","event","target","value","type","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","query","get","searchFilm","searchMovie","data","results","console","log","message","axios","KEY","fetchMovie","searchById","url","searchAboutMovie","about"],"sourceRoot":""}