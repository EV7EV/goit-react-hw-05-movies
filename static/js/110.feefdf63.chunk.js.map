{"version":3,"file":"static/js/110.feefdf63.chunk.js","mappings":"2RAGMA,EAAUC,EAAAA,GAAAA,QAAH,+CAIPC,EAAcD,EAAAA,GAAAA,IAAH,wDAKXE,EAAQF,EAAAA,GAAAA,GAAH,qHAOLG,EAAiBH,EAAAA,GAAAA,EAAH,qHAOdI,EAAYJ,EAAAA,GAAAA,GAAH,6EAMTK,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,2H,SCiDhB,EApEyB,WAAO,IAAD,IAC7B,GAA8BO,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,KAE1CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,+FACbC,EAAAA,EAAAA,IAAWT,GAASU,MAAK,SAAAC,GAAI,OAAIZ,EAAWY,EAAf,IADhB,2CAAH,qDAGlBH,GACD,GAAE,CAACR,IAEJ,IAAQY,EAAuDd,EAAvDc,YAAaC,EAA0Cf,EAA1Ce,MAAOC,EAAmChB,EAAnCgB,SAAUC,EAAyBjB,EAAzBiB,OAAQC,EAAiBlB,EAAjBkB,aAC9C,OACE,iCACE,UAAC3B,EAAD,YACE,SAACM,EAAD,CAAYsB,GAAIb,EAAhB,SAA0B,sBAC1B,UAACb,EAAD,YACE,gBACE2B,MAAM,QACNC,OAAO,QACPC,IACER,EAAW,yCAC2BA,GAClC,qKAENS,IAAI,WAEN,4BACE,SAAC7B,EAAD,UAAQqB,KACR,SAACpB,EAAD,UAAiBuB,KACjB,SAACvB,EAAD,UAAiBqB,KACjB,SAACrB,EAAD,UAAgB,eAChB,SAACC,EAAD,UACGqB,GACCA,EAAOO,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMC,MAAjBD,EAAME,GAAnB,gBAK1B,SAACpC,EAAD,WACE,UAACK,EAAD,YACE,yBACE,SAACC,EAAD,CACEU,MAAO,CAAEC,KAAMF,GACfa,GAAE,kBAAajB,EAAb,SAFJ,SAGC,YAIH,yBACE,SAACL,EAAD,CACEU,MAAO,CAAEC,KAAMF,GACfa,GAAE,kBAAajB,EAAb,YAFJ,SAGC,oBAMP,SAACX,EAAD,WACE,SAAC,KAAD,QAIP,C,sKC7EDqC,EAAAA,EAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAM,mCAENC,EAAU,mCAAG,4FACL,+BADK,SAEMF,EAAAA,EAAAA,IAAA,UADX,gCACW,OAAmBC,IAFzB,uBAEThB,EAFS,EAETA,KAFS,kBAGVA,GAHU,2CAAH,qDAMVkB,EAAW,mCAAG,WAAMC,GAAN,+EACN,+CADM,SAEKJ,EAAAA,EAAAA,IAAA,UADX,gDACW,OAAmBC,EAAnB,kBAAgCG,IAFrC,uBAEVnB,EAFU,EAEVA,KAFU,kBAIXA,GAJW,2CAAH,sDAOXF,EAAU,mCAAG,WAAMgB,GAAN,kFACXM,EADW,mBACON,EADP,sBAEMC,EAAAA,EAAAA,IAAA,UAAaK,GAAb,OAAmBJ,IAFzB,uBAEThB,EAFS,EAETA,KAFS,kBAIVA,GAJU,2CAAH,sDAOVqB,EAAgB,mCAAG,WAAOP,EAAIQ,GAAX,kFACjBF,EADiB,mBACCN,EADD,YACOQ,EADP,sBAGAP,EAAAA,EAAAA,IAAA,UAAaK,GAAb,OAAmBJ,IAHnB,uBAGfhB,EAHe,EAGfA,KAHe,kBAKhBA,GALgB,2CAAH,uD","sources":["components/StyledComponents/StyledComponents.styled.js","pages/MovieDetailsPage.jsx","services/MovieApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Section = styled.section`\n  padding: 40px 20px;\n`;\n\nconst FilmWrapper = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\nconst Title = styled.h2`\n  line-height: 40px;\n  font-size: 40px;\n  letter-spacing: 0.02em;\n  margin-bottom: 20px;\n`;\n\nconst OverviewRating = styled.p`\n  line-height: 18px;\n  font-size: 15px;\n  letter-spacing: 0.02em;\n  margin-bottom: 10px;\n`;\n\nconst GenreList = styled.ul`\n  font-weight: 600;\n  display: flex;\n  gap: 10px;\n`;\n\nconst LinkStyled = styled(Link)`\n  text-decoration: none;\n  font-size: 20px;\n  letter-spacing: 0.03em;\n  color: rgb(224 92 45);\n`;\n\nexport { Section, FilmWrapper, Title, OverviewRating, GenreList, LinkStyled };\n","import { useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\n\nimport { searchById } from 'services/MovieApi';\nimport {\n  Section,\n  FilmWrapper,\n  Title,\n  OverviewRating,\n  GenreList,\n  LinkStyled,\n} from 'components/StyledComponents/StyledComponents.styled';\n\nconst MovieDetailsPage = () => {\n  const [oneFilm, setOneFilm] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const cameFrom = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    const getMovieById = async () => {\n      await searchById(movieId).then(data => setOneFilm(data));\n    };\n    getMovieById();\n  }, [movieId]);\n\n  const { poster_path, title, overview, genres, vote_average } = oneFilm;\n  return (\n    <>\n      <Section>\n        <LinkStyled to={cameFrom}>return to movies</LinkStyled>\n        <FilmWrapper>\n          <img\n            width=\"500px\"\n            height=\"750px\"\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : 'https://pixabay.com/get/g95a2dc3dd10be26c9598275be3cf4782592288a68b0db506b9a6d0f7acb03dd8315942505e34951e67529f8cc280ba76fba5448b53138ef7211f108c2128a4e3_1280.jpg'\n            }\n            alt=\"title\"\n          />\n          <div>\n            <Title>{title}</Title>\n            <OverviewRating>{vote_average}</OverviewRating>\n            <OverviewRating>{overview}</OverviewRating>\n            <OverviewRating> Genres: </OverviewRating>\n            <GenreList>\n              {genres &&\n                genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n            </GenreList>\n          </div>\n        </FilmWrapper>\n      </Section>\n      <Section>\n        <GenreList>\n          <li>\n            <LinkStyled\n              state={{ from: cameFrom }}\n              to={`/movies/${movieId}/cast`}\n            >\n              Cast\n            </LinkStyled>\n          </li>\n          <li>\n            <LinkStyled\n              state={{ from: cameFrom }}\n              to={`/movies/${movieId}/reviews`}\n            >\n              Reviews\n            </LinkStyled>\n          </li>\n        </GenreList>\n      </Section>\n      <Section>\n        <Outlet />\n      </Section>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst KEY = 'cca79e12b25cdd9f67fc795a1689f5d9';\n\nconst fetchMovie = async () => {\n  const url = '/3/trending/all/day?api_key=';\n  const { data } = await axios.get(`${url}${KEY}`);\n  return data;\n};\n\nconst searchMovie = async value => {\n  const url = '/3/search/movie?include_adult=false&api_key=';\n  const { data } = await axios.get(`${url}${KEY}&query=${value}`);\n\n  return data;\n};\n\nconst searchById = async id => {\n  const url = `/3/movie/${id}?api_key=`;\n  const { data } = await axios.get(`${url}${KEY}`);\n\n  return data;\n};\n\nconst searchAboutMovie = async (id, about) => {\n  const url = `/3/movie/${id}/${about}?api_key=`;\n\n  const { data } = await axios.get(`${url}${KEY}`);\n\n  return data;\n};\n\nexport { fetchMovie, searchMovie, searchById, searchAboutMovie };\n"],"names":["Section","styled","FilmWrapper","Title","OverviewRating","GenreList","LinkStyled","Link","useState","oneFilm","setOneFilm","movieId","useParams","location","useLocation","cameFrom","state","from","useEffect","getMovieById","searchById","then","data","poster_path","title","overview","genres","vote_average","to","width","height","src","alt","map","genre","name","id","axios","KEY","fetchMovie","searchMovie","value","url","searchAboutMovie","about"],"sourceRoot":""}